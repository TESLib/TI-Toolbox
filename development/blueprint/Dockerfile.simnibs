# Dockerfile.simnibs
FROM ubuntu:20.04

# Set noninteractive mode for apt-get
ENV DEBIAN_FRONTEND=noninteractive

# General Packages and pip
##########################################################
RUN apt-get update && apt-get install -y \
    wget \
    git \
    unzip \
    python3.8 \
    python3-pip \
    libglib2.0-0 \
    libssl1.1 \
    libopenblas-dev \
    build-essential \
    tar \
    bzip2 \
    gcc \
    g++ \
    gcc-10 \
    g++-10 \
    cmake \
    libtool \
    libtool-bin \
    autoconf \
    automake \
    pkg-config \
    gettext \
    curl \
    ninja-build \
    python3.8-venv \
    python3.8-dev \
    libgl1-mesa-glx \
    libglu1-mesa \
    mesa-utils \
    libgl1-mesa-dri \
    libglapi-mesa \
    libosmesa6 \
    libxt6 \
    libxext6 \
    libxrender1 \
    libxrandr2 \
    libxfixes3 \
    libxcursor1 \
    libxcomposite1 \
    libxdamage1 \
    libxi6 \
    libqt5widgets5 \
    libqt5gui5 \
    libqt5core5a \
    libqt5svg5 \
    libqt5opengl5 \
    libgtk2.0-0 \
    libreoffice \
    nodejs \
    npm \
    jq \
    bc \
    dc \
    vim \
    tmux \
    tcsh \
    tree \
    locales \
    fontconfig \
    execstack \
    imagemagick \
    parallel \
    dcm2niix \
    dos2unix \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN pip3 install numpy scipy pandas meshio nibabel nilearn

######## Install SimNIBS ################
RUN mkdir -p /simnibs && chmod -R 755 /simnibs

RUN wget https://github.com/simnibs/simnibs/releases/download/v4.5.0/simnibs_installer_linux.tar.gz -P /simnibs \
    && tar -xzf /simnibs/simnibs_installer_linux.tar.gz -C /simnibs \
    && /simnibs/simnibs_installer/install -s

ENV PATH="/root/SimNIBS-4.5/bin:$PATH"
ENV SIMNIBSDIR="/root/SimNIBS-4.5"

########### TI-CSC ########################
RUN git clone https://github.com/idossha/TI-CSC-2.0.git /ti-csc

# Convert all shell scripts to Unix line endings
RUN find /ti-csc -name "*.sh" -exec dos2unix {} \;

# EEG caps for CSC 
RUN mkdir -p $SIMNIBSDIR/resources/ElectrodeCaps_MNI/
RUN cp /ti-csc/assets/ElectrodeCaps_MNI/* $SIMNIBSDIR/resources/ElectrodeCaps_MNI/

# Flex extention by Ido Haber 
RUN rm -f $SIMNIBSDIR/simnibs/optimization/tes_flex_optimization/tes_flex_optimization.py && \
    cp /ti-csc/assets/map-electrodes/tes_flex_optimization.py $SIMNIBSDIR/simnibs/optimization/tes_flex_optimization/tes_flex_optimization.py

############ CLI tools ###############

# Install Neovim v.0.11.0 from source 
RUN git clone https://github.com/neovim/neovim.git /tmp/neovim \
    && cd /tmp/neovim \
    && git checkout v0.11.0 \
    && make CMAKE_BUILD_TYPE=Release \ 
    && make install \
    && rm -rf /tmp/neovim

# Create symlinks for config files
RUN ln -sf /ti-csc/config/.tmux.conf /root/.tmux.conf && \
    ln -sf /ti-csc/config/nvim /root/.config/

############ MATLAB prep ###############

# Create MATLAB Runtime directory
RUN mkdir -p /usr/local/MATLAB/MATLAB_Runtime
# Additional steps to run execstack on process_mesh_files in specific field-analysis directories
RUN execstack -s /ti-csc/ex-search/field-analysis/process_mesh_files 

# Entry point script to ensure XDG_RUNTIME_DIR exists
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Set working directory to TI-CSC
WORKDIR /ti-csc

# Set the entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
